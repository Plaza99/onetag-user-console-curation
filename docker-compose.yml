services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres-twitter
    environment:
      POSTGRES_DB: twitter_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - twitter-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: twitter-backend
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/twitter_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    networks:
      - twitter-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/tweets || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: twitter-frontend
    ports:
      - "4200:4200"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - twitter-network

volumes:
  postgres_data:

networks:
  twitter-network:
    driver: bridge